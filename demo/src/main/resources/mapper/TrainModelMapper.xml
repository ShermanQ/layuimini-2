<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.Dao.TrainModelMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.models.TrainModel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="modelName" jdbcType="VARCHAR" property="modelName" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="datasetsName" jdbcType="VARCHAR" property="datasetsName" />
    <result column="selectT" jdbcType="VARCHAR" property="selectT" />
    <result column="selectResNet" jdbcType="VARCHAR" property="selectResNet" />
    <result column="selectTest" jdbcType="VARCHAR" property="selectTest" />
    <result column="batchSize" jdbcType="VARCHAR" property="batchSize" />
    <result column="epochs" jdbcType="VARCHAR" property="epochs" />
    <result column="sgdoradam" jdbcType="VARCHAR" property="sgdoradam" />
    <result column="gpu_nums" jdbcType="VARCHAR" property="gpu_nums" />
    <result column="learningRate" jdbcType="VARCHAR" property="learningRate" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="state" jdbcType="VARCHAR" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, modelName, date, datasetsName, selectT, selectResNet, selectTest, batchSize, 
    epochs, sgdoradam, gpu_nums, learningRate, mail, state
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.models.TrainModelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from train
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from train
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from train
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.models.TrainModelExample">
    delete from train
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.models.TrainModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into train (modelName, date, datasetsName, 
      selectT, selectResNet, selectTest, 
      batchSize, epochs, sgdoradam, 
      gpu_nums, learningRate, mail, 
      state)
    values (#{modelName,jdbcType=VARCHAR}, #{date,jdbcType=VARCHAR}, #{datasetsName,jdbcType=VARCHAR}, 
      #{selectT,jdbcType=VARCHAR}, #{selectResNet,jdbcType=VARCHAR}, #{selectTest,jdbcType=VARCHAR}, 
      #{batchSize,jdbcType=VARCHAR}, #{epochs,jdbcType=VARCHAR}, #{sgdoradam,jdbcType=VARCHAR}, 
      #{gpu_nums,jdbcType=VARCHAR}, #{learningRate,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.models.TrainModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into train
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="modelName != null">
        modelName,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="datasetsName != null">
        datasetsName,
      </if>
      <if test="selectT != null">
        selectT,
      </if>
      <if test="selectResNet != null">
        selectResNet,
      </if>
      <if test="selectTest != null">
        selectTest,
      </if>
      <if test="batchSize != null">
        batchSize,
      </if>
      <if test="epochs != null">
        epochs,
      </if>
      <if test="sgdoradam != null">
        sgdoradam,
      </if>
      <if test="gpu_nums != null">
        gpu_nums,
      </if>
      <if test="learningRate != null">
        learningRate,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="modelName != null">
        #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="datasetsName != null">
        #{datasetsName,jdbcType=VARCHAR},
      </if>
      <if test="selectT != null">
        #{selectT,jdbcType=VARCHAR},
      </if>
      <if test="selectResNet != null">
        #{selectResNet,jdbcType=VARCHAR},
      </if>
      <if test="selectTest != null">
        #{selectTest,jdbcType=VARCHAR},
      </if>
      <if test="batchSize != null">
        #{batchSize,jdbcType=VARCHAR},
      </if>
      <if test="epochs != null">
        #{epochs,jdbcType=VARCHAR},
      </if>
      <if test="sgdoradam != null">
        #{sgdoradam,jdbcType=VARCHAR},
      </if>
      <if test="gpu_nums != null">
        #{gpu_nums,jdbcType=VARCHAR},
      </if>
      <if test="learningRate != null">
        #{learningRate,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.models.TrainModelExample" resultType="java.lang.Integer">
    select count(*) from train
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update train
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.modelName != null">
        modelName = #{record.modelName,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.datasetsName != null">
        datasetsName = #{record.datasetsName,jdbcType=VARCHAR},
      </if>
      <if test="record.selectT != null">
        selectT = #{record.selectT,jdbcType=VARCHAR},
      </if>
      <if test="record.selectResNet != null">
        selectResNet = #{record.selectResNet,jdbcType=VARCHAR},
      </if>
      <if test="record.selectTest != null">
        selectTest = #{record.selectTest,jdbcType=VARCHAR},
      </if>
      <if test="record.batchSize != null">
        batchSize = #{record.batchSize,jdbcType=VARCHAR},
      </if>
      <if test="record.epochs != null">
        epochs = #{record.epochs,jdbcType=VARCHAR},
      </if>
      <if test="record.sgdoradam != null">
        sgdoradam = #{record.sgdoradam,jdbcType=VARCHAR},
      </if>
      <if test="record.gpu_nums != null">
        gpu_nums = #{record.gpu_nums,jdbcType=VARCHAR},
      </if>
      <if test="record.learningRate != null">
        learningRate = #{record.learningRate,jdbcType=VARCHAR},
      </if>
      <if test="record.mail != null">
        mail = #{record.mail,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update train
    set id = #{record.id,jdbcType=INTEGER},
      modelName = #{record.modelName,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=VARCHAR},
      datasetsName = #{record.datasetsName,jdbcType=VARCHAR},
      selectT = #{record.selectT,jdbcType=VARCHAR},
      selectResNet = #{record.selectResNet,jdbcType=VARCHAR},
      selectTest = #{record.selectTest,jdbcType=VARCHAR},
      batchSize = #{record.batchSize,jdbcType=VARCHAR},
      epochs = #{record.epochs,jdbcType=VARCHAR},
      sgdoradam = #{record.sgdoradam,jdbcType=VARCHAR},
      gpu_nums = #{record.gpu_nums,jdbcType=VARCHAR},
      learningRate = #{record.learningRate,jdbcType=VARCHAR},
      mail = #{record.mail,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.models.TrainModel">
    update train
    <set>
      <if test="modelName != null">
        modelName = #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="datasetsName != null">
        datasetsName = #{datasetsName,jdbcType=VARCHAR},
      </if>
      <if test="selectT != null">
        selectT = #{selectT,jdbcType=VARCHAR},
      </if>
      <if test="selectResNet != null">
        selectResNet = #{selectResNet,jdbcType=VARCHAR},
      </if>
      <if test="selectTest != null">
        selectTest = #{selectTest,jdbcType=VARCHAR},
      </if>
      <if test="batchSize != null">
        batchSize = #{batchSize,jdbcType=VARCHAR},
      </if>
      <if test="epochs != null">
        epochs = #{epochs,jdbcType=VARCHAR},
      </if>
      <if test="sgdoradam != null">
        sgdoradam = #{sgdoradam,jdbcType=VARCHAR},
      </if>
      <if test="gpu_nums != null">
        gpu_nums = #{gpu_nums,jdbcType=VARCHAR},
      </if>
      <if test="learningRate != null">
        learningRate = #{learningRate,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.models.TrainModel">
    update train
    set modelName = #{modelName,jdbcType=VARCHAR},
      date = #{date,jdbcType=VARCHAR},
      datasetsName = #{datasetsName,jdbcType=VARCHAR},
      selectT = #{selectT,jdbcType=VARCHAR},
      selectResNet = #{selectResNet,jdbcType=VARCHAR},
      selectTest = #{selectTest,jdbcType=VARCHAR},
      batchSize = #{batchSize,jdbcType=VARCHAR},
      epochs = #{epochs,jdbcType=VARCHAR},
      sgdoradam = #{sgdoradam,jdbcType=VARCHAR},
      gpu_nums = #{gpu_nums,jdbcType=VARCHAR},
      learningRate = #{learningRate,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPage" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT * FROM traj.train
    LIMIT #{startIndex}, #{pageSize}
  </select>
  <!-- 在Mapper XML文件中定义获取总记录数的SQL语句 -->
  <select id="countTotal" resultType="int">
    SELECT COUNT(*) FROM traj.train
  </select>

</mapper>